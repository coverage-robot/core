name: Event Package

on:
    merge_group:
        types:
            - checks_requested
        branches:
            - main

        # Path filtering isn't supported on merge queues, so we're forced to run all services

    push:
        branches:
            - main
        paths:
            - ".github/workflows/event.yml"
            - "packages/event/**"
            - "rector.php"

    pull_request:
        paths:
            - ".github/workflows/event.yml"
            - "packages/event/**"
            - "rector.php"

    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash
        working-directory: "./packages/event/"

env:
    # PHP version to use for deploying - this should be included in the supported versions
    # defined in the build/lint/test jobs
    target-php-version: "8.4"

    working-directory: "./packages/event/"

jobs:
    event-tests:
        name: "Event Tests"
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                php-version: ["8.4"]

        steps:
            - uses: actions/checkout@v5

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}

            - name: Validate Composer configuration
              run: composer validate

            - name: Install Composer dependencies
              run: composer install --prefer-dist --optimize-autoloader --classmap-authoritative
              env:
                  COMPOSER_AUTH: '{"http-basic": {"coverage-robot.repo.repman.io": {"username": "token", "password": "${{ secrets.REPMAN_TOKEN }}"}}}'

            - name: Run Rector
              run: composer lint:rector

            - name: Run Psalm
              run: composer lint:static-analysis -- --php-version=${{ matrix.php-version }}

            - name: Run Psalm Security Analysis
              run: composer lint:security

            - name: Run PHPUnit
              id: tests
              run: |
                  composer test:unit -- --coverage-clover='./coverage.xml'
                  echo "php-version=${{ matrix.php-version }}" >> $GITHUB_OUTPUT
              shell: bash

            - uses: coverage-robot/action@v1.0.10
              # Only upload coverage for the target PHP version so that we don't upload duplicate coverage where the
              # tests are run on multiple PHP versions
              if: always() && steps.tests.outputs.php-version == env.target-php-version
              with:
                  token: ${{ secrets.COVERAGE_TOKEN }}
                  files: |
                      ${{ env.working-directory }}/coverage.xml
                  tag: event-package
              continue-on-error: true
