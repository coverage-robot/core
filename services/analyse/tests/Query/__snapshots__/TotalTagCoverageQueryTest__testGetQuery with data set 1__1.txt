WITH
  unnested AS (
    SELECT
      upload.tag,
      upload.totalLines,
      upload.commit,
      fileName,
      lineNumber,
      type = 'METHOD' as containsMethod,
      type = 'BRANCH' as containsBranch,
      type = 'STATEMENT' as containsStatement,
      (
        SELECT
          IF (
            value <> '',
            CAST(value AS int),
            0
          )
        FROM
          UNNEST(metadata)
        WHERE
          key = "lineHits"
      ) AS hits,
      ARRAY(
        SELECT
          SUM(
            CAST(branchHits AS INT64)
          )
        FROM
          UNNEST(
            JSON_VALUE_ARRAY(
              (
                SELECT
                  value
                FROM
                  UNNEST(metadata)
                WHERE
                  KEY = "branchHits"
              )
            )
          ) AS branchHits
        WITH
          OFFSET AS branchIndex
        GROUP BY
          branchIndex,
          branchHits
      ) as branchHits
    FROM
      `mock-table` as upload
      INNER JOIN `mock-line-coverage-table` as lines ON lines.uploadId = upload.uploadId
    WHERE
      (
        (
          (
            upload.commit = "mock-commit"
            AND upload.tag = "1"
          )
          OR (
            upload.commit = "mock-commit"
            AND upload.tag = "2"
          )
          OR (
            upload.commit = "mock-commit-2"
            AND upload.tag = "3"
          )
          OR (
            upload.commit = "mock-commit-2"
            AND upload.tag = "4"
          )
        )
        AND upload.provider = @PROVIDER
        AND upload.owner = @OWNER
        AND upload.repository = @REPOSITORY
      )
      AND DATE(lines.ingestTime) IN UNNEST(@INGEST_PARTITIONS)
  ),
  branchingLines AS (
    SELECT
      fileName,
      lineNumber,
      tag,
      totalLines,
      commit,
      MAX(containsMethod) as containsMethod,
      MAX(containsBranch) as containsBranch,
      MAX(containsStatement) as containsStatement,
      SUM(hits) as hits,
      branchIndex,
      SUM(branchHit) > 0 as isBranchedLineHit
    FROM
      unnested,
      UNNEST(
        IF(
          ARRAY_LENGTH(branchHits) = 0,
          [hits],
          branchHits
        )
      ) AS branchHit
    WITH
      OFFSET AS branchIndex
    GROUP BY
      fileName,
      lineNumber,
      tag,
      totalLines,
      commit,
      branchIndex
  ),
  lines AS (
    SELECT
      tag,
      totalLines,
      commit,
      fileName,
      lineNumber,
      IF(
        -- Check that the line hits are 0 (i.e. not executed) and that, if theres a branch, it's
        -- definitely not been covered at all (as we'll want to show that as a partial line)
        SUM(hits) = 0
        AND COUNTIF(
          containsBranch = true
          AND isBranchedLineHit = true
        ) = 0,
        "uncovered",
        IF (
          MIN(isBranchedLineHit) = false,
          "partial",
          "covered"
        )
      ) as state
    FROM
      branchingLines
    GROUP BY
      tag,
      commit,
      totalLines,
      fileName,
      lineNumber
  )
SELECT
  tag as tagName,
  STRUCT(
    tag as name, commit as commit, totalLines as successfullyUploadedLines
  ) as tag,
  COUNT(*) as lines,
  COALESCE(
    SUM(
      IF(state = "covered", 1, 0)
    ),
    0
  ) as covered,
  COALESCE(
    SUM(
      IF(state = "partial", 1, 0)
    ),
    0
  ) as partial,
  COALESCE(
    SUM(
      IF(state = "uncovered", 1, 0)
    ),
    0
  ) as uncovered,
  ROUND(
    (
      SUM(
        IF(state = "covered", 1, 0)
      ) + SUM(
        IF(state = "partial", 1, 0)
      )
    ) / COUNT(*) * 100,
    2
  ) as coveragePercentage
FROM
  lines
GROUP BY
  tagName,
  totalLines,
  commit
ORDER BY
  tagName ASC