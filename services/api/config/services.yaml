parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Random\Randomizer: ~

    App\Handler\EventHandler:
        # The handler must be public so that Bref is able to run it through the Symfony
        # runtime
        public: true

    App\Handler\WebhookHandler:
        # The handler must be public so that Bref is able to run it through the Symfony
        # runtime
        public: true

    Packages\Event\Service\EventProcessorServiceInterface: '@Packages\Event\Service\EventProcessorService'

    Packages\Event\Service\EventProcessorService:
        arguments:
            $eventProcessors: !tagged_iterator { tag: 'app.event_processor', default_index_method: 'getEvent'}

    Packages\Telemetry\XRayHttpClient: ~

    AsyncAws\EventBridge\EventBridgeClient:
        arguments:
            # Inject the decorated Http Client which will provide the X-Ray tracing
            # header onto every AWS request
            $httpClient: '@Packages\Telemetry\XRayHttpClient'

    AsyncAws\Sqs\SqsClient:
        arguments:
            # Inject the decorated Http Client which will provide the X-Ray tracing
            # header onto every AWS request
            $httpClient: '@Packages\Telemetry\XRayHttpClient'

    PUGX\Poser\Render\:
        resource: '../vendor/badges/poser/src/Render'

    PUGX\Poser\Poser:
        arguments:
            $renders:
                - '@PUGX\Poser\Render\SvgPlasticRender'
                - '@PUGX\Poser\Render\SvgFlatSquareRender'
                - '@PUGX\Poser\Render\SvgForTheBadgeRenderer'
                - '@PUGX\Poser\Render\SvgFlatRender'